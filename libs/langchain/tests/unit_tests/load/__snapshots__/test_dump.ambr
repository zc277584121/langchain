# serializer version: 1
# name: test_person
  '''
  {
    "lc": 1,
    "type": "constructor",
    "id": [
      "tests",
      "unit_tests",
      "load",
      "test_dump",
      "Person"
    ],
    "kwargs": {
      "secret": {
        "lc": 1,
        "type": "secret",
        "id": [
          "SECRET"
        ]
      },
      "you_can_see_me": "hello"
    }
  }
  '''
# ---
# name: test_person.1
  '''
  {
    "lc": 1,
    "type": "constructor",
    "id": [
      "my",
      "special",
      "namespace",
      "SpecialPerson"
    ],
    "kwargs": {
      "secret": {
        "lc": 1,
        "type": "secret",
        "id": [
          "SECRET"
        ]
      },
      "you_can_see_me": "hello",
      "another_secret": {
        "lc": 1,
        "type": "secret",
        "id": [
          "ANOTHER_SECRET"
        ]
      },
      "another_visible": "bye"
    }
  }
  '''
# ---
# name: test_person_with_kwargs
  '{"lc":1,"type":"constructor","id":["tests","unit_tests","load","test_dump","Person"],"kwargs":{"secret":{"lc":1,"type":"secret","id":["SECRET"]},"you_can_see_me":"hello"}}'
# ---
# name: test_serialize_llmchain
  '''
  {
    "lc": 1,
    "type": "constructor",
    "id": [
      "langchain",
      "chains",
      "llm",
      "LLMChain"
    ],
    "kwargs": {
      "prompt": {
        "lc": 1,
        "type": "constructor",
        "id": [
          "langchain",
          "prompts",
          "prompt",
          "PromptTemplate"
        ],
        "kwargs": {
          "input_variables": [
            "name"
          ],
          "template": "hello {name}!",
          "template_format": "f-string"
        },
        "name": "PromptTemplate",
        "graph": {
          "nodes": [
            {
              "id": 0,
              "type": "schema",
              "data": "PromptInput"
            },
            {
              "id": 1,
              "type": "runnable",
              "data": {
                "id": [
                  "langchain",
                  "prompts",
                  "prompt",
                  "PromptTemplate"
                ],
                "name": "PromptTemplate"
              }
            },
            {
              "id": 2,
              "type": "schema",
              "data": "PromptTemplateOutput"
            }
          ],
          "edges": [
            {
              "source": 0,
              "target": 1
            },
            {
              "source": 1,
              "target": 2
            }
          ]
        }
      },
      "llm": {
        "lc": 1,
        "type": "constructor",
        "id": [
          "langchain",
          "llms",
          "openai",
          "OpenAI"
        ],
        "kwargs": {
          "model_name": "davinci",
          "temperature": 0.5,
          "max_tokens": 256,
          "top_p": 1,
          "n": 1,
          "best_of": 1,
          "openai_api_key": {
            "lc": 1,
            "type": "secret",
            "id": [
              "OPENAI_API_KEY"
            ]
          },
          "openai_proxy": "",
          "batch_size": 20,
          "max_retries": 2,
          "disallowed_special": "all"
        },
        "name": "OpenAI",
        "graph": {
          "nodes": [
            {
              "id": 0,
              "type": "schema",
              "data": "OpenAIInput"
            },
            {
              "id": 1,
              "type": "runnable",
              "data": {
                "id": [
                  "langchain",
                  "llms",
                  "openai",
                  "OpenAI"
                ],
                "name": "OpenAI"
              }
            },
            {
              "id": 2,
              "type": "schema",
              "data": "OpenAIOutput"
            }
          ],
          "edges": [
            {
              "source": 0,
              "target": 1
            },
            {
              "source": 1,
              "target": 2
            }
          ]
        }
      },
      "output_key": "text",
      "output_parser": {
        "lc": 1,
        "type": "constructor",
        "id": [
          "langchain",
          "schema",
          "output_parser",
          "StrOutputParser"
        ],
        "kwargs": {},
        "name": "StrOutputParser",
        "graph": {
          "nodes": [
            {
              "id": 0,
              "type": "schema",
              "data": "StrOutputParserInput"
            },
            {
              "id": 1,
              "type": "runnable",
              "data": {
                "id": [
                  "langchain",
                  "schema",
                  "output_parser",
                  "StrOutputParser"
                ],
                "name": "StrOutputParser"
              }
            },
            {
              "id": 2,
              "type": "schema",
              "data": "StrOutputParserOutput"
            }
          ],
          "edges": [
            {
              "source": 0,
              "target": 1
            },
            {
              "source": 1,
              "target": 2
            }
          ]
        }
      },
      "return_final_only": true
    },
    "name": "LLMChain",
    "graph": {
      "nodes": [
        {
          "id": 0,
          "type": "schema",
          "data": "ChainInput"
        },
        {
          "id": 1,
          "type": "runnable",
          "data": {
            "id": [
              "langchain",
              "chains",
              "llm",
              "LLMChain"
            ],
            "name": "LLMChain"
          }
        },
        {
          "id": 2,
          "type": "schema",
          "data": "ChainOutput"
        }
      ],
      "edges": [
        {
          "source": 0,
          "target": 1
        },
        {
          "source": 1,
          "target": 2
        }
      ]
    }
  }
  '''
# ---
# name: test_serialize_llmchain_chat
  '''
  {
    "lc": 1,
    "type": "constructor",
    "id": [
      "langchain",
      "chains",
      "llm",
      "LLMChain"
    ],
    "kwargs": {
      "prompt": {
        "lc": 1,
        "type": "constructor",
        "id": [
          "langchain",
          "prompts",
          "chat",
          "ChatPromptTemplate"
        ],
        "kwargs": {
          "input_variables": [
            "name"
          ],
          "messages": [
            {
              "lc": 1,
              "type": "constructor",
              "id": [
                "langchain",
                "prompts",
                "chat",
                "HumanMessagePromptTemplate"
              ],
              "kwargs": {
                "prompt": {
                  "lc": 1,
                  "type": "constructor",
                  "id": [
                    "langchain",
                    "prompts",
                    "prompt",
                    "PromptTemplate"
                  ],
                  "kwargs": {
                    "input_variables": [
                      "name"
                    ],
                    "template": "hello {name}!",
                    "template_format": "f-string"
                  },
                  "name": "PromptTemplate",
                  "graph": {
                    "nodes": [
                      {
                        "id": 0,
                        "type": "schema",
                        "data": "PromptInput"
                      },
                      {
                        "id": 1,
                        "type": "runnable",
                        "data": {
                          "id": [
                            "langchain",
                            "prompts",
                            "prompt",
                            "PromptTemplate"
                          ],
                          "name": "PromptTemplate"
                        }
                      },
                      {
                        "id": 2,
                        "type": "schema",
                        "data": "PromptTemplateOutput"
                      }
                    ],
                    "edges": [
                      {
                        "source": 0,
                        "target": 1
                      },
                      {
                        "source": 1,
                        "target": 2
                      }
                    ]
                  }
                }
              }
            }
          ]
        },
        "name": "ChatPromptTemplate",
        "graph": {
          "nodes": [
            {
              "id": 0,
              "type": "schema",
              "data": "PromptInput"
            },
            {
              "id": 1,
              "type": "runnable",
              "data": {
                "id": [
                  "langchain",
                  "prompts",
                  "chat",
                  "ChatPromptTemplate"
                ],
                "name": "ChatPromptTemplate"
              }
            },
            {
              "id": 2,
              "type": "schema",
              "data": "ChatPromptTemplateOutput"
            }
          ],
          "edges": [
            {
              "source": 0,
              "target": 1
            },
            {
              "source": 1,
              "target": 2
            }
          ]
        }
      },
      "llm": {
        "lc": 1,
        "type": "constructor",
        "id": [
          "langchain",
          "chat_models",
          "openai",
          "ChatOpenAI"
        ],
        "kwargs": {
          "model_name": "davinci",
          "temperature": 0.5,
          "openai_api_key": {
            "lc": 1,
            "type": "secret",
            "id": [
              "OPENAI_API_KEY"
            ]
          },
          "openai_proxy": "",
          "max_retries": 2,
          "n": 1
        },
        "name": "ChatOpenAI",
        "graph": {
          "nodes": [
            {
              "id": 0,
              "type": "schema",
              "data": "ChatOpenAIInput"
            },
            {
              "id": 1,
              "type": "runnable",
              "data": {
                "id": [
                  "langchain",
                  "chat_models",
                  "openai",
                  "ChatOpenAI"
                ],
                "name": "ChatOpenAI"
              }
            },
            {
              "id": 2,
              "type": "schema",
              "data": "ChatOpenAIOutput"
            }
          ],
          "edges": [
            {
              "source": 0,
              "target": 1
            },
            {
              "source": 1,
              "target": 2
            }
          ]
        }
      },
      "output_key": "text",
      "output_parser": {
        "lc": 1,
        "type": "constructor",
        "id": [
          "langchain",
          "schema",
          "output_parser",
          "StrOutputParser"
        ],
        "kwargs": {},
        "name": "StrOutputParser",
        "graph": {
          "nodes": [
            {
              "id": 0,
              "type": "schema",
              "data": "StrOutputParserInput"
            },
            {
              "id": 1,
              "type": "runnable",
              "data": {
                "id": [
                  "langchain",
                  "schema",
                  "output_parser",
                  "StrOutputParser"
                ],
                "name": "StrOutputParser"
              }
            },
            {
              "id": 2,
              "type": "schema",
              "data": "StrOutputParserOutput"
            }
          ],
          "edges": [
            {
              "source": 0,
              "target": 1
            },
            {
              "source": 1,
              "target": 2
            }
          ]
        }
      },
      "return_final_only": true
    },
    "name": "LLMChain",
    "graph": {
      "nodes": [
        {
          "id": 0,
          "type": "schema",
          "data": "ChainInput"
        },
        {
          "id": 1,
          "type": "runnable",
          "data": {
            "id": [
              "langchain",
              "chains",
              "llm",
              "LLMChain"
            ],
            "name": "LLMChain"
          }
        },
        {
          "id": 2,
          "type": "schema",
          "data": "ChainOutput"
        }
      ],
      "edges": [
        {
          "source": 0,
          "target": 1
        },
        {
          "source": 1,
          "target": 2
        }
      ]
    }
  }
  '''
# ---
# name: test_serialize_llmchain_with_non_serializable_arg
  '''
  {
    "lc": 1,
    "type": "constructor",
    "id": [
      "langchain",
      "chains",
      "llm",
      "LLMChain"
    ],
    "kwargs": {
      "prompt": {
        "lc": 1,
        "type": "constructor",
        "id": [
          "langchain",
          "prompts",
          "prompt",
          "PromptTemplate"
        ],
        "kwargs": {
          "input_variables": [
            "name"
          ],
          "template": "hello {name}!",
          "template_format": "f-string"
        },
        "name": "PromptTemplate",
        "graph": {
          "nodes": [
            {
              "id": 0,
              "type": "schema",
              "data": "PromptInput"
            },
            {
              "id": 1,
              "type": "runnable",
              "data": {
                "id": [
                  "langchain",
                  "prompts",
                  "prompt",
                  "PromptTemplate"
                ],
                "name": "PromptTemplate"
              }
            },
            {
              "id": 2,
              "type": "schema",
              "data": "PromptTemplateOutput"
            }
          ],
          "edges": [
            {
              "source": 0,
              "target": 1
            },
            {
              "source": 1,
              "target": 2
            }
          ]
        }
      },
      "llm": {
        "lc": 1,
        "type": "constructor",
        "id": [
          "langchain",
          "llms",
          "openai",
          "OpenAI"
        ],
        "kwargs": {
          "model_name": "davinci",
          "temperature": 0.5,
          "max_tokens": 256,
          "top_p": 1,
          "n": 1,
          "best_of": 1,
          "openai_api_key": {
            "lc": 1,
            "type": "secret",
            "id": [
              "OPENAI_API_KEY"
            ]
          },
          "openai_proxy": "",
          "batch_size": 20,
          "max_retries": 2,
          "disallowed_special": "all"
        },
        "name": "OpenAI",
        "graph": {
          "nodes": [
            {
              "id": 0,
              "type": "schema",
              "data": "OpenAIInput"
            },
            {
              "id": 1,
              "type": "runnable",
              "data": {
                "id": [
                  "langchain",
                  "llms",
                  "openai",
                  "OpenAI"
                ],
                "name": "OpenAI"
              }
            },
            {
              "id": 2,
              "type": "schema",
              "data": "OpenAIOutput"
            }
          ],
          "edges": [
            {
              "source": 0,
              "target": 1
            },
            {
              "source": 1,
              "target": 2
            }
          ]
        }
      },
      "output_key": "text",
      "output_parser": {
        "lc": 1,
        "type": "constructor",
        "id": [
          "langchain",
          "schema",
          "output_parser",
          "StrOutputParser"
        ],
        "kwargs": {},
        "name": "StrOutputParser",
        "graph": {
          "nodes": [
            {
              "id": 0,
              "type": "schema",
              "data": "StrOutputParserInput"
            },
            {
              "id": 1,
              "type": "runnable",
              "data": {
                "id": [
                  "langchain",
                  "schema",
                  "output_parser",
                  "StrOutputParser"
                ],
                "name": "StrOutputParser"
              }
            },
            {
              "id": 2,
              "type": "schema",
              "data": "StrOutputParserOutput"
            }
          ],
          "edges": [
            {
              "source": 0,
              "target": 1
            },
            {
              "source": 1,
              "target": 2
            }
          ]
        }
      },
      "return_final_only": true
    },
    "name": "LLMChain",
    "graph": {
      "nodes": [
        {
          "id": 0,
          "type": "schema",
          "data": "ChainInput"
        },
        {
          "id": 1,
          "type": "runnable",
          "data": {
            "id": [
              "langchain",
              "chains",
              "llm",
              "LLMChain"
            ],
            "name": "LLMChain"
          }
        },
        {
          "id": 2,
          "type": "schema",
          "data": "ChainOutput"
        }
      ],
      "edges": [
        {
          "source": 0,
          "target": 1
        },
        {
          "source": 1,
          "target": 2
        }
      ]
    }
  }
  '''
# ---
# name: test_serialize_openai_llm
  '''
  {
    "lc": 1,
    "type": "constructor",
    "id": [
      "langchain",
      "llms",
      "openai",
      "OpenAI"
    ],
    "kwargs": {
      "model_name": "davinci",
      "temperature": 0.7,
      "max_tokens": 256,
      "top_p": 1,
      "n": 1,
      "best_of": 1,
      "openai_api_key": {
        "lc": 1,
        "type": "secret",
        "id": [
          "OPENAI_API_KEY"
        ]
      },
      "openai_proxy": "",
      "batch_size": 20,
      "max_retries": 2,
      "disallowed_special": "all"
    },
    "name": "OpenAI",
    "graph": {
      "nodes": [
        {
          "id": 0,
          "type": "schema",
          "data": "OpenAIInput"
        },
        {
          "id": 1,
          "type": "runnable",
          "data": {
            "id": [
              "langchain",
              "llms",
              "openai",
              "OpenAI"
            ],
            "name": "OpenAI"
          }
        },
        {
          "id": 2,
          "type": "schema",
          "data": "OpenAIOutput"
        }
      ],
      "edges": [
        {
          "source": 0,
          "target": 1
        },
        {
          "source": 1,
          "target": 2
        }
      ]
    }
  }
  '''
# ---
